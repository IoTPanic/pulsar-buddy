#include "ui_music.h"

#include "display.h"


TimeSignatureField::TimeSignatureField(
  int16_t x, int16_t y, uint16_t w, uint16_t h,
  ValueField<uint8_t>& numberField,
  ValueField<uint8_t>& beatField
  )
  : PairField<uint8_t, uint8_t>(x, y, w, h, numberField, beatField,
    { { 4, 4 }, { 3, 4 }, { 2, 4 }, { 6, 8 }, { 12, 16 }, { 16, 16 }}
  )
  { }

void TimeSignatureField::redraw() {
  display.drawFastHLine(x + 1, y + h / 2, w - 2, foreColor());
}



TupletRatioField::TupletRatioField(
  int16_t x, int16_t y, uint16_t w, uint16_t h,
  ValueField<uint8_t>& countField,
  ValueField<uint8_t>& timeField
  )
  : PairField<uint8_t, uint8_t>(x, y, w, h, countField, timeField,
      { { 3, 2 }, { 2, 3 }, { 4, 3 }, { 5, 4 }, { 7, 4 }, { 7, 6 }}
    )
  { }

void TupletRatioField::redraw() {
  display.setTextColor(foreColor());
  centerText(":", x, y, w, h);
}

namespace {
  // 'note2', 12x28px
  // const unsigned char imageNote2 [] PROGMEM = {
  //   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x33, 0xc0, 0x71, 0xe0, 0x79, 0xe0, 0x78, 0xe0,
  //   0x3c, 0xc0, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  // };
  // 'note4', 12x28px
  const unsigned char imageNote4 [] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
    0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
    0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x1e, 0x00, 0x3e, 0x00, 0x7e, 0x00, 0x7e, 0x00,
    0x7c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  // 'note8', 12x28px
  const unsigned char imageNote8 [] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x80, 0x03, 0xc0,
    0x02, 0xe0, 0x02, 0x60, 0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x02, 0x60, 0x02, 0x40, 0x02, 0x80,
    0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x1e, 0x00, 0x3e, 0x00, 0x7e, 0x00, 0x7e, 0x00,
    0x7c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  // 'note16', 12x28px
  const unsigned char imageNote16 [] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x80, 0x03, 0xc0,
    0x02, 0xe0, 0x03, 0x60, 0x03, 0x20, 0x03, 0xa0, 0x03, 0xe0, 0x02, 0xe0, 0x02, 0x60, 0x02, 0x20,
    0x02, 0x20, 0x02, 0x60, 0x02, 0x40, 0x02, 0x80, 0x1e, 0x00, 0x3e, 0x00, 0x7e, 0x00, 0x7e, 0x00,
    0x7c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00
  };
}

BeatField::BeatField(
    int16_t x, int16_t y, uint16_t w, uint16_t h,
    uint8_t& value
    )
    : ValueField(x, y, w, h, value, {16, 8, 4})
    { }

void BeatField::redraw() {
  const uint8_t *bitmap;

  switch (value) {
    case 16:    bitmap = imageNote16;   break;
    case  8:    bitmap = imageNote8;    break;
    case  4:    bitmap = imageNote4;    break;
 // case  2:    bitmap = imageNote2;    break;
    default:
      ValueField<uint8_t>::redraw();
      return;
  }

  display.drawBitmap(x, y, bitmap, 12, 28, foreColor());
  valueAsDrawn = value;
}
