TODO

[x] starting on the 1 should mean all triggers fire on start

[x] outputs need to be off when stopped (how?)

[x] when ext sync'd display sometimes flickers to bright... implying a change
	- find out what it is.
	- fast moving clock threashold was too low

[x] Timeouts need one activity call to get going
	- so does screen saver


[] how to stay sync'd to the one?
	- one tap tempo input could reset to the 1!

[] look into saving when clock goes perplexed
[] look into getting perplexed when shifting to very fast tempos

[] probably should persist state only if it is stable



--- Later

[x] Configuration system:
	- press encoder at boot to get to
	- simple text UI
	- just on/off flags (for now)
	- stored in flash
[x] Possible settings:
	- always DIM display
	- never screen save

[x] Figure out production / debug build method


[] Version number from somewhere!


[] ? MIDI Clock code: include? or keep #ifdef'd? or configuration?
	- currently using #if 0 in several places

[] ? ZeroRegs: compile in for production? or keep out?

[] Handle printing run-time errors
	- write Serial if available, else to Display
		- if writing to display, wait for press to resume
	- a new Print subclass that does this
	- use in Flash for errors
	- use in timing for "shouldn't happen"



[] if no beats after X min... shut down display totally
	- fire back on when beat detected
	- implemented screen saver
	[] ? should this only happen if no beats?
	[] ? what about if on internal... ?

[] need a UI for "apply right now!"
[] need a UI for "really, reset the whole dang thing!"


[] check and Serial write (or other error) when periods out of range

[] speed up centerNumber by using the fixed size of digits in the font

[] MIDI clock sync mode
	[] timing to 24th
	[] enable / disable event system for sw event on entry/exit

[] make enums be uint8_t based
	- probably not really worth it



HARDWARE
--------

Physical
	? how to assemble?
	? alternate / better encoder?
	? encoder cap
	? box





QUESTIONS

[] if total reset length is kept under 4 x 4/4 (or even 8 x 8/1!)
	then all cycle counts in q fit in 16 bits

[] should tuplet load be sync'd to measure or full sequence?
[] should sequence length, when reloaded, be reset to first measure?
[] if only a tuplet change, then if sync'd on measure, should sequence restart or no?

[] why doesn't TCC1.WO1 on PAD_SPI_RX (pin 0, PA11) work?


NOTES
-----
- can set flags in platform.local.txt, like so:
	compiler.c.extra_flags="-DEK_BUILD"
	compiler.cpp.extra_flags="-DEK_BUILD"



SYNC
----

if computed rate is outside of BPM (divisor) range
	- then BAD_SYNC condition
	- show some form of broken / question icon
	- ? show previous BPM?
		- target is likely to have slewed up?

if missed N (2?) clocks,
	- then PAUSED_SYNC condition
	- show previous BPM, but with a paused icon on top
	- on next clock...
		- restart capture (resetcapture() won't work because same sync rate)
		- ? reset counters to start of sequence?
