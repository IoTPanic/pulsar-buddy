TODO


== 106 ==

[] Flash issues
	[x] check SPI bus on scope
		[x] drop to lower rate in chip description
			- somewhere between 12MHz to 2MHz, based on scope readings
	[x] mini-flash tester & erase in config menus

[] data storage
	[] use all (most?) of Flash for data storage
	[] redo upgrade data path from older data...

[x] UI issue
	[x] when switching frame contents, new fields in bad state



== 107 ==

[] let M be one of { M, 1/4, 1/8, 1/16, 1/32 }
	[] settings member
	[] ui field
	[] icons

[] let B be one of { B, 1/4, 1/8, 1/16, 1/32 }


[] ? MIDI Clock code: include? or keep #ifdef'd? or configuration?
	- currently using #if 0 in several places
[] MIDI clock sync mode
	[] timing to 24th
	[] enable / disable event system for sw event on entry/exit


--------------


[] support DIN24 and DIN48 sync outputs
	[] force 50% duty cycle
	[] icons

[] support 2nd tuplet option for B
	[] icon
	[] UI for setting second Tuplet






--- Later

[] probably should persist state only if it is stable

[] ? ZeroRegs: compile in for production? or keep out?

[] how to stay sync'd to the one?
	- one tap tempo input could reset to the 1!

[] check that various timer periods are in range
	- and use critical.print() if not

[] need a UI for "apply right now!"
[] need a UI for "really, reset the whole dang thing!"

[] speed up centerNumber by using the fixed size of digits in the font

[] make enums be uint8_t based
	- probably not really worth it




QUESTIONS
---------

[] if total reset length is kept under 4 x 4/4 (or even 8 x 8/1!)
	then all cycle counts in q fit in 16 bits

[] should tuplet load be sync'd to measure or full sequence?
[] should sequence length, when reloaded, be reset to first measure?
[] if only a tuplet change, then if sync'd on measure, should sequence restart or no?


NOTES
-----
- can set flags in platform.local.txt, like so:
	compiler.c.extra_flags="-DEK_BUILD"
	compiler.cpp.extra_flags="-DEK_BUILD"

- to build release UF2 file:
	- build in Arduino
	- note directory of output items in verbose output
	- cd there
	- run
		python ~/bin/uf2conv.py pb.ino.bin -c -o pulsar-buddy-v1xx.uf2
	- uf2conf.py script comes from:
		https://github.com/microsoft/uf2/blob/master/utils/uf2conv.py


SYNC
----

if computed rate is outside of BPM (divisor) range
	- then BAD_SYNC condition
	- show some form of broken / question icon
	- ? show previous BPM?
		- target is likely to have slewed up?

if missed N (2?) clocks,
	- then PAUSED_SYNC condition
	- show previous BPM, but with a paused icon on top
	- on next clock...
		- restart capture (resetcapture() won't work because same sync rate)
		- ? reset counters to start of sequence?
